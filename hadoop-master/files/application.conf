# spark default configuration
spark.executor.memory=1g
spark.mesos.coarse=false
spark.scheduler.mode=FAIR
spark.cores.max=2
spark.master="yarn-cluster"
spark.path=${SPARK_HOME}
spark.default.parallelism=384
spark.storage.memoryFraction=0.3
spark.shuffle.memoryFraction=0.6
spark.shuffle.compress=true
spark.shuffle.spill-compress=true
spark.reducer.maxMbInFlight=48
spark.akka.frameSize=100
spark.akka.threads=4
spark.akka.timeout=100
spark.task.maxFailures=4
spark.shuffle.consolidateFiles=true
spark.deploy.spreadOut=true
spark.shuffle.spill=false
spark.kryo.referenceTracking=false

#Default Spark Driver JVM memory
driver.xmxMemory = 1g

# application configuration
appConf{
  # This ip on which to deploy the apis
  web.services.ip="0.0.0.0"
  # The port on which to deploy the apis
  web.services.port=8097
  # Implicit akka timeout
  timeout=1000000
  # Remote context initialization
  init {
    # Implicit sleep (milliseconds) before sending init message
    sleep=3000
    # Tries before consider remote context as dead
    tries=20
    # Timeout for each attempt (milliseconds)
    retry-timeout=1000
    # Inteval beetween attempts to reach remote context (milliseconds)
    retry-interval=1500
  }
  # The port where the range for actor system starts
  actor.systems.first.port = 11000
  # The port where the range for spark ui starts
  spark.ui.first.port = 16000
  # The path to the folder where to keep the jars
  jars.path = ${JAR_PATH}
}

context{
  # Path to context process work directory
  contexts-base-dir = ${CONTEXTS_BASE_DIR}
  # Amount of jobs which can be executed on context in parallel. Zero means infinit concurency.
  cuncurrent-jobs = 0
  # Context factory that will be dynamically loaded to instantiate job context
  job-context-factory = "context.HiveContextFactory"
  # Spark context factory that will be used for non-Spark job contexts (SQL or Hive)
  spark-context-factory = "context.SparkContextFactory"
}

manager {
  akka {
    log-dead-letters = 1
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      enabled-transports = ["akka.remote.netty.tcp"]
      log-sent-messages = on
      log-received-messages = on
      netty.tcp {
        transport-class = "akka.remote.transport.netty.NettyTransport"
        hostname = "127.0.0.1"
        port = 4042
        maximum-frame-size = 256000b
      }
    }
  }

  spray.can.server {
    # uncomment the next line for making this an HTTPS example
    # ssl-encryption = on
    idle-timeout = 61 s
    request-timeout = 60 s
    parsing.max-content-length = 200m
  }
}
